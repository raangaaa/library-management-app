// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Perpustakaan.Services;

#nullable disable

namespace Perpustakaan.Migrations
{
    [DbContext(typeof(DatabaseService))]
    [Migration("20241121125650_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Perpustakaan.Models.BookModel", b =>
                {
                    b.Property<int>("Book_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Book_Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Book_Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Perpustakaan.Models.BorrowBookModel", b =>
                {
                    b.Property<int>("Borrow_Book_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Borrow_Book_Id"));

                    b.Property<int>("Book_Id")
                        .HasColumnType("int");

                    b.Property<int>("Borrow_Amount")
                        .HasColumnType("int");

                    b.Property<int>("Borrow_Id")
                        .HasColumnType("int");

                    b.HasKey("Borrow_Book_Id");

                    b.HasIndex("Book_Id");

                    b.HasIndex("Borrow_Id");

                    b.ToTable("BorrowBooks");
                });

            modelBuilder.Entity("Perpustakaan.Models.BorrowModel", b =>
                {
                    b.Property<int>("Borrow_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Borrow_Id"));

                    b.Property<DateTime>("Borrow_Date")
                        .HasColumnType("date");

                    b.Property<int>("Loan_Duration")
                        .HasColumnType("int");

                    b.Property<int>("Penalty")
                        .HasColumnType("int");

                    b.Property<DateTime>("Return_Date")
                        .HasColumnType("date");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Borrow_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Borrows");
                });

            modelBuilder.Entity("Perpustakaan.Models.ReturnModel", b =>
                {
                    b.Property<int>("Return_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Return_Id"));

                    b.Property<int>("Book_Id")
                        .HasColumnType("int");

                    b.Property<int>("Borrow_Id")
                        .HasColumnType("int");

                    b.Property<int>("Penalty")
                        .HasColumnType("int");

                    b.Property<DateTime>("Return_Date")
                        .HasColumnType("date");

                    b.HasKey("Return_Id");

                    b.HasIndex("Book_Id");

                    b.HasIndex("Borrow_Id");

                    b.ToTable("Return");
                });

            modelBuilder.Entity("Perpustakaan.Models.StudentModel", b =>
                {
                    b.Property<string>("Student_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("NIS")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Student_Id");

                    b.HasIndex("NIS")
                        .IsUnique();

                    b.HasIndex("User_Id")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Perpustakaan.Models.UserModel", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Perpustakaan.Models.BorrowBookModel", b =>
                {
                    b.HasOne("Perpustakaan.Models.BookModel", "Book")
                        .WithMany("BorrowBooks")
                        .HasForeignKey("Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Perpustakaan.Models.BorrowModel", "Borrow")
                        .WithMany("BorrowBooks")
                        .HasForeignKey("Borrow_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Borrow");
                });

            modelBuilder.Entity("Perpustakaan.Models.BorrowModel", b =>
                {
                    b.HasOne("Perpustakaan.Models.UserModel", "User")
                        .WithMany("Borrows")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Perpustakaan.Models.ReturnModel", b =>
                {
                    b.HasOne("Perpustakaan.Models.BookModel", "Book")
                        .WithMany("Returns")
                        .HasForeignKey("Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Perpustakaan.Models.BorrowModel", "Borrow")
                        .WithMany("Returns")
                        .HasForeignKey("Borrow_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Borrow");
                });

            modelBuilder.Entity("Perpustakaan.Models.StudentModel", b =>
                {
                    b.HasOne("Perpustakaan.Models.UserModel", "User")
                        .WithOne("Student")
                        .HasForeignKey("Perpustakaan.Models.StudentModel", "User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Perpustakaan.Models.BookModel", b =>
                {
                    b.Navigation("BorrowBooks");

                    b.Navigation("Returns");
                });

            modelBuilder.Entity("Perpustakaan.Models.BorrowModel", b =>
                {
                    b.Navigation("BorrowBooks");

                    b.Navigation("Returns");
                });

            modelBuilder.Entity("Perpustakaan.Models.UserModel", b =>
                {
                    b.Navigation("Borrows");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
